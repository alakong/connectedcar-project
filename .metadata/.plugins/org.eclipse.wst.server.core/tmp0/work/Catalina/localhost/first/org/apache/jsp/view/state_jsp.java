/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.6
 * Generated at: 2018-06-01 04:04:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class state_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("jar:file:/C:/project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/first/WEB-INF/lib/spring-webmvc-5.0.5.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1522752190000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-5.0.5.RELEASE.jar", Long.valueOf(1525933211405L));
    _jspx_dependants.put("jar:file:/C:/project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/first/WEB-INF/lib/standard-1.1.2.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("jar:file:/C:/project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/first/WEB-INF/lib/spring-webmvc-5.0.5.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1522752190000L));
    _jspx_dependants.put("/WEB-INF/lib/standard-1.1.2.jar", Long.valueOf(1520823355453L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<link href=\"view/css/sb-admin.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<title>StatePage</title>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\r\n");
      out.write("<script src=\"jQueryRotateCompressed.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"http://beneposto.pl/jqueryrotate/js/jQueryRotateCompressed.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"http://maps.google.com/maps/api/js?sensor=false&language=ko\"></script>\r\n");
      out.write("<script async defer\r\n");
      out.write("\tsrc=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDKy-W18gyBXJQGDU2diCyAdo_0nzc2ze0&callback=initMap\"\r\n");
      out.write("\ttype=\"text/javascript\"></script>\r\n");
      out.write("\t\r\n");
      out.write("<!-- Bootstrap core JavaScript-->\r\n");
      out.write("<script src=\"view/vendor/jquery/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"view/vendor/bootstrap/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<!-- Core plugin JavaScript-->\r\n");
      out.write("<script src=\"view/vendor/jquery-easing/jquery.easing.min.js\"></script>\r\n");
      out.write("<!-- Page level plugin JavaScript-->\r\n");
      out.write("<script src=\"view/vendor/chart.js/Chart.min.js\"></script>\r\n");
      out.write("<!-- Custom scripts for all pages-->\r\n");
      out.write("<script src=\"view/js/sb-admin.min.js\"></script>\r\n");
      out.write("<!-- Custom scripts for this page-->\r\n");
      out.write("<script src=\"view/js/sb-admin-charts.js\"></script>\r\n");
      out.write("<!-- 하이차트 스크립트 -------------------------------------------------------->\r\n");
      out.write("<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n");
      out.write("<script src=\"https://code.highcharts.com/highcharts-more.js\"></script>\r\n");
      out.write("<script src=\"https://code.highcharts.com/modules/solid-gauge.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("#image {\r\n");
      out.write("\twidth: 30%;\r\n");
      out.write("\theight: 20%;\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\tmargin: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("//지도\r\n");
      out.write("function initialize(input) {\r\n");
      out.write("\r\n");
      out.write("\tvar mapOptions = {\r\n");
      out.write("\t\tzoom : 50,\r\n");
      out.write("\t\tcenter : input[0],\r\n");
      out.write("\t\tmapTypeId : google.maps.MapTypeId.ROADMAP\r\n");
      out.write("\t}\r\n");
      out.write("\tvar map = new google.maps.Map(document.getElementById('map_canvas'),\r\n");
      out.write("\t\t\tmapOptions);\r\n");
      out.write("\t\t\tvar myLatlng = new google.maps.LatLng(input[0]); // y, x좌표값\r\n");
      out.write("\t\t\tvar marker = new google.maps.Marker({\r\n");
      out.write("\t\t\t\tposition : myLatlng,\r\n");
      out.write("\t\t\t\tmap : map\r\n");
      out.write("\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tvar address= JSON.stringify(input[0]['address']);\r\n");
      out.write("\t\t\tvar iwContent ='<div style=\"font-weight:bold;font-size: 10px;font-family: Verdana;letter-spacing:-1px;\">위치: '+address+'</div>'\r\n");
      out.write("\t\t\tvar infowindow = new google.maps.InfoWindow({\r\n");
      out.write("\t\t\t\tcontent : iwContent,\r\n");
      out.write("\t\t\t\tmaxWidth : 300\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tgoogle.maps.event.addListener(marker, 'mouseover', function() {\r\n");
      out.write("\t\t\t\tinfowindow.open(map, marker);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tgoogle.maps.event.addListener(marker, 'mouseout', function() {\r\n");
      out.write("\t\t\t\tinfowindow.close();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("\t// Server에 데이터를 요청한다.\r\n");
      out.write("\t// AJAX로\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl : 'mystate.do',\r\n");
      out.write("\t\tdataType : 'json',\r\n");
      out.write("\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t//alert(data);\r\n");
      out.write("\t\t\tinitialize(data);\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror : function(e) {\r\n");
      out.write("\t\t\talert('fail');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<header> <h1>State</h1></header>\r\n");
      out.write("\t<section>\r\n");
      out.write("<img src=\"img/car2.gif\" id=\"image\">\r\n");
      out.write("<div id=\"map_canvas\" style=\"width: 300px; height: 300px; margin-top: 10px;float : left\"></div>\r\n");
      out.write("\t\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<footer></footer>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
