/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.6
 * Generated at: 2018-06-04 05:24:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class map2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/first/WEB-INF/lib/standard-1.1.2.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/WEB-INF/lib/standard-1.1.2.jar", Long.valueOf(1520823355453L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\r\n");
      out.write("<meta name=\"viewport\" content=\"initial-scale=1.0\" />\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"http://maps.google.com/maps/api/js?sensor=false&language=ko\"></script>\r\n");
      out.write("<script async defer\r\n");
      out.write("\tsrc=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDKy-W18gyBXJQGDU2diCyAdo_0nzc2ze0&callback=initMap\"\r\n");
      out.write("\ttype=\"text/javascript\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("var markers = [];\r\n");
      out.write("\tvar posList = [];\r\n");
      out.write("\t var map;\r\n");
      out.write("\r\n");
      out.write("\tfunction drawMarker(s_marker){\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction initMap(input) {\r\n");
      out.write("\r\n");
      out.write("\t\tvar mapOptions = {\r\n");
      out.write("\t\t\tzoom : 17,\r\n");
      out.write("\t\t\tcenter : input[0],\r\n");
      out.write("\t\t\tmapTypeId : google.maps.MapTypeId.ROADMAP\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tmap = new google.maps.Map(document.getElementById('map_canvas'),\r\n");
      out.write("\t\t\t\tmapOptions);\r\n");
      out.write("\r\n");
      out.write("\t\tfor (i in input) {\r\n");
      out.write("\t\t\t(function(i) {\r\n");
      out.write("\t\t\t\tvar myLatlng = new google.maps.LatLng(input[i]); // y, x좌표값\r\n");
      out.write("\t\t\t\tvar address = JSON.stringify(input[i]['address']);\r\n");
      out.write("\t\t\t\taddress.replace(\"\\\"\", \"\");//큰따옴표 제거\r\n");
      out.write("\t\t\t\tvar content1 = JSON.stringify(input[i]['dLevel']);\r\n");
      out.write("\t\t\t\tvar content2 = JSON.stringify(input[i]['dTime']);\r\n");
      out.write("\t\t\t\tvar iwContent = '<div class=\"tip\" ><div class=\"tiptitle\"; style=\"font-weight:bold;font-size: 10px;font-family: Verdana;letter-spacing:-1px;\">'\r\n");
      out.write("\t\t\t\t\t\t+ address\r\n");
      out.write("\t\t\t\t\t\t+ '</div><div class=\"tipcontent\">'\r\n");
      out.write("\t\t\t\t\t\t+ '<div style=\"text-align:left;font-weight:bold;font-size: 10px;font-family: Verdana;letter-spacing:-1px;\">위험도 레벨: '\r\n");
      out.write("\t\t\t\t\t\t+ content1\r\n");
      out.write("\t\t\t\t\t\t+ '</div><div style=\"text-align:left;font-weight:bold;font-size: 10px;font-family: Verdana;letter-spacing:-1px;\">위험 시간: '\r\n");
      out.write("\t\t\t\t\t\t+ content2 + '</div></div></div>'\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t var infowindow= new google.maps.InfoWindow({\r\n");
      out.write("\t\t\t\t\tcontent : iwContent,\r\n");
      out.write("\t\t\t\t\tmaxWidth : 300\r\n");
      out.write("\t\t\t\t}); \r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t\t var marker = new google.maps.Marker({\r\n");
      out.write("\t\t\t\t\tposition : myLatlng,\r\n");
      out.write("\t\t\t\t\tmap : map,\r\n");
      out.write("\t\t\t\t\t  infowindow: infowindow,\r\n");
      out.write("\t\t\t\ticon:'view/images/redpin.png'\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t markers.push(marker);\r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t\t\tgoogle.maps.event.addListener(marker, 'click', function() {\r\n");
      out.write("// \t\t\t\t\tdrawMarker(marker)\r\n");
      out.write("\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\tmarkers.forEach(function(marker) {\r\n");
      out.write("\t\t\t\t\t     marker.infowindow.close(map, marker);\r\n");
      out.write("\t\t\t\t\t  }); \r\n");
      out.write("\t\t\t\t\tmarker.infowindow.open(map, marker);\r\n");
      out.write("\t\t\t\t\tmap.panTo(myLatlng);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tgoogle.maps.event.addListener(marker, 'center_changed', function() {\r\n");
      out.write("\t\t\t\t\tinfowindow.close();\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t})(i);\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\t// Server에 데이터를 요청한다.\r\n");
      out.write("\t\t// AJAX로\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : 'mapimpl.do',\r\n");
      out.write("\t\t\tdataType : 'json',\r\n");
      out.write("\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\tvar table = $('<div style=\"height: 500px;overflow-y: scroll;\"><table class=\"table\"></table></div>')\t\r\n");
      out.write("\t\t\t\tvar markerList = $('#markerList').append(table);\r\n");
      out.write("\t\t\t\tfor(idx in data){\r\n");
      out.write("// \t\t\t\t\r\n");
      out.write("\t\t\t\t\tvar tr = $('<tr></tr>')\r\n");
      out.write("\t\t\t\t\tvar td = $('<td></td>')\r\n");
      out.write("\t\t\t\t\tvar di = $('<div class=\"list\" ></div>')\r\n");
      out.write("\t\t\t\t\tdi.attr('id','addrdiv_'+idx)\r\n");
      out.write("\t\t\t\t\ttable.append(tr)\r\n");
      out.write("\t\t\t\t\ttr.append(td)\r\n");
      out.write("\t\t\t\t\ttd.append(di)\r\n");
      out.write("\t\t\t\t\tdi.html('<div class=\"chg\" id=\"chg_'+idx+'\"></div><div class=\"listcol\"><div class=\"address\">'+ data[idx].address +'</div><div class=\"row\">위도:'+data[idx].lat+'&nbsp&nbsp경도:'+data[idx].lng+'</div>'\r\n");
      out.write("\t\t\t\t\t\t\t+'<div class=\"row\">위험도 레벨:&nbsp'+data[idx].dLevel+'</div><div class=\"row\">위험 시간:&nbsp'+data[idx].dTime+'</div></div>');\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t(function(i){\t\r\n");
      out.write("\t\t\t\t\tvar address2 = JSON.stringify( data[i].address);\r\n");
      out.write("\t\t\t\t\tvar content12 =  data[i].dLevel;\r\n");
      out.write("\t\t\t\t\tvar content22 = JSON.stringify(data[i]['dTime']);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t$(document).on(\"click\",\"#addrdiv_\"+idx,function(){\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tfor(j in data){/* 하나 클릭하기 전에 나머지 배경색 리셋  */\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#addrdiv_'+j).css('background-color','')\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t$(this).css('background-color','#384861')\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tmarkers.forEach(function(marker) {\r\n");
      out.write("\t\t\t\t     marker.infowindow.close(map, markers[i]);\r\n");
      out.write("\t\t\t\t  }); \r\n");
      out.write("\t\t\t\t\tmarkers[i].infowindow.open(map, markers[i]);\r\n");
      out.write("\t\t\t\tmap.panTo(new google.maps.LatLng(data[i].lat, data[i].lng));\r\n");
      out.write("\t\t\t\t\t\t\tfor(j in data){/* 하나 클릭하기 전에 나머지 배경색 리셋  */\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#chg_'+j).css('background-color','')\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#chg_\"+i).css('background-color','rgb(58, 189, 180)')\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t});\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t})(idx)\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tinitMap(data);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\r\n");
      out.write("\t\t\terror : function(e) {\r\n");
      out.write("\t\t\t\talert('fail');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write(".tiptitle{\r\n");
      out.write(" padding: 10px;\r\n");
      out.write("   background-color: rgb(62, 197, 204,0.7);\r\n");
      out.write("   color: white;\r\n");
      out.write("   margin: 1px;\r\n");
      out.write("   margin-bottom:5px;\r\n");
      out.write("   border-radius: 2px 2px 0 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#container {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\twidth:100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#map_canvas {\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\tz-index: 1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#markerList {\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\twidth: 25%;\r\n");
      out.write("\theight: 730px;\r\n");
      out.write("\t\r\n");
      out.write("\tbackground-color: rgb(47, 60, 81);\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tbox-shadow: -3px 0px 3px #bfbfbf;\r\n");
      out.write("\tz-index: 2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".detail {\r\n");
      out.write("\r\n");
      out.write("\twidth: 95%;\r\n");
      out.write("\tcolor: rgb(62, 197, 204,0.7);\r\n");
      out.write("\tfont-size:48px;\r\n");
      out.write("/* \tfloat:right; */\r\n");
      out.write("\ttext-align:right;\r\n");
      out.write("\tfont-weight:bold;\r\n");
      out.write("\tmargin-top: 1cm;\r\n");
      out.write("\tmargin-left: 0.7cm;\r\n");
      out.write("\r\n");
      out.write("\tmargin-bottom: 2cm;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".contt{\r\n");
      out.write("\r\n");
      out.write("margin-bottom: 0.5cm;\r\n");
      out.write("margin-right:1.4cm;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".listcol{\r\n");
      out.write("padding-top:0.1cm;\r\n");
      out.write("width:98%;\r\n");
      out.write("/* margin-left:0.7cm;\r\n");
      out.write(" */ \r\n");
      out.write(" float:left;\r\n");
      out.write(" text-align: right;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".table {\r\n");
      out.write("    text-align: right;\r\n");
      out.write("/*     width:80%;\r\n");
      out.write(" */    margin-left:0.7cm;\r\n");
      out.write("\tmargin-right: 0.2cm;\r\n");
      out.write("}\r\n");
      out.write(".row{\r\n");
      out.write("\r\n");
      out.write("padding-right: 0.05cm;\r\n");
      out.write("margin:0px;\r\n");
      out.write("font-size:11px;\r\n");
      out.write("height:0.35cm;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".list {\r\n");
      out.write("\r\n");
      out.write(" \twidth: 6.8cm;\r\n");
      out.write("     height: 1.8cm;\r\n");
      out.write("\tcolor: #bec9da;\r\n");
      out.write("\tfont-size: 15px;\r\n");
      out.write("\tletter-spacing: -1px;\r\n");
      out.write("\tborder: none;\r\n");
      out.write("\tbackground-color: transparent;\r\n");
      out.write("\tmargin-top: 0.2cm;\r\n");
      out.write("\tmargin-left: 0.7cm;\r\n");
      out.write("\tmargin-right:0.2cm;\r\n");
      out.write("\tfloat: center;\r\n");
      out.write(" text-align: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".address{\r\n");
      out.write("color:rgb(62, 197, 204,0.7);\r\n");
      out.write("font-size:15px;\r\n");
      out.write("font-weight:bold;\r\n");
      out.write("}\r\n");
      out.write(".chg{\r\n");
      out.write("float:left;\r\n");
      out.write("width:0.9%;\r\n");
      out.write("height:100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 지도를 출력할 영역에 아래 소스 삽입! -->\r\n");
      out.write("\t<div id=\"container\">\r\n");
      out.write("\t\t<div id=\"map_canvas\" style=\"width: 75%; height: 730px;\"></div>\r\n");
      out.write("\t\t<div id=\"markerList\">\r\n");
      out.write("\t\t<div class=\"detail\"> <div class=\"contt\" >DangerArea</div>\r\n");
      out.write("\t\t<div class=\"contt\">List</div></div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
